@page "/clients/list/active"

@using AgileMaintence.Domain.DTOs.ClientDTO

@inject NavigationManager _nav

<AgileMaintence.Components.Headers.HeaderTitleBar Text="Clientes Ativos" TextButton="Novo Cliente" Action="CreateClient" />
<div class="agile-table-container">
    <table class="agile-table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nome</th>
                <th>CPF</th>
                <th>Telefone</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Name</td>
                    <td>@item.Cpf</td>
                    <td>@item.Phone</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    public List<ClientDTO> Model { get; set; }


    protected override void OnInitialized()
    {
        Model = GetAllClients();

        base.OnInitialized();
    }

    public List<ClientDTO> GetAllClients()
    {
        var clients = new List<ClientDTO>
            {
                new ClientDTO { Id = 1, Name = "João", Cpf = "888.888.888-88", Phone="(17)9999-999"},
                new ClientDTO { Id = 2, Name = "Maria", Cpf = "888.888.888-88", Phone="(17)9999-999"},
                new ClientDTO { Id = 3, Name = "José", Cpf = "888.888.888-88", Phone="(17)9999-999"}
        };
        return clients;
    }

    private async Task CreateClient()
    {
        _nav.NavigateTo(($"/cliente/create"));

        @*INTEGRAÇÃO COM API PARA CRIAR NOVA EMPRESA*@
        // DisabledCreateEnterprise = true;
        // await InvokeAsync(StateHasChanged);
        // await Task.Delay(500);
        // await _exe.Execute(async () =>
        // {
        //     var url = UrlApi + "enterprises/create";
        //     var result = await _http.Post<dynamic, ResponseDTO<string>>(
        //     url, new
        //     {
        //         constructionCompanyId = _state.GetCurrentConstruction(),
        //         status = RegistrationStatusType.Incomplete
        //     });

        //     if (result != null)
        //     {
        //         _nav.NavigateTo($"/dashboard/enterprises/create/{result.Data}");
        //     }
        // });
        // DisabledCreateEnterprise = false;
        // await InvokeAsync(StateHasChanged);
    }
}
